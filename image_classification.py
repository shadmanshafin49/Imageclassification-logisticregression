# -*- coding: utf-8 -*-
"""image_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zDhI1RcIbi1hNx9KoMBKp7BKJ8yk5FaN
"""

!pip install numpy
!pip install tensorflow
!pip install matplotlib
!pip install pandas
!pip install scikit-learn

from sklearn.datasets import fetch_openml

mnist=fetch_openml("mnist_784")

mnist

x, y = mnist['data'], mnist['target']

print(x.index)

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

import matplotlib
import matplotlib.pyplot as plt

some_digit = x.iloc[36001]
some_digit_image=some_digit.values.reshape(28,28) #reshaping it to plot it

plt.imshow(some_digit_image, cmap=matplotlib.cm.binary, interpolation='nearest')
plt.axis("off")

y[36001]

x_train, x_test = x[:60000], x[60000:]

y_train, y_test = y[:60000], y[60000:]

import numpy as np
shuffle_index=np.random.permutation(60000)
x_train, y_train=x_train[shuffle_index], y_train[shuffle_index]

# creating a 2 detector

y_train=y_train.astype(np.int8)
y_test=y_test.astype(np.int8)

y_train_2 = (y_train==2)
y_test_2=(y_test==2)

y_train

from sklearn.linear_model import LogisticRegression

clf=LogisticRegression(tol=0.1)

clf=LogisticRegression()

clf.fit(x_train, y_train_2)

clf.predict([some_digit])

from sklearn.model_selection import cross_val_score
a= cross_val_score(clf, x_train, y_train_2, cv=3, scoring='accuracy')

a.mean()